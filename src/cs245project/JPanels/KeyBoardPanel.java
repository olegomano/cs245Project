/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs245project.JPanels;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author root
 */
public class KeyBoardPanel extends javax.swing.JPanel implements ActionListener{

    public interface OnKeyPressedListener{
        public void onKeyPressed(char key);
    }
    
    private javax.swing.JButton[] keys = new javax.swing.JButton[26];
    private int rows = 2;
    private OnKeyPressedListener listener;
    /**
     * Creates new form KeyBoardPanel
     */
    public KeyBoardPanel() {
        super();
        initComponents();
        System.out.println("Keyboard ctr");
        //mInit();
    }
    
    public void setKeyListener(OnKeyPressedListener l){
        listener = l;
    }
    
    public void reset(){
        for(int i  = 0; i < keys.length; i++){
            if(keys[i]!=null)
            keys[i].setEnabled(true);
        }
    }
    
    public void setBounds(int x, int y, int w, int h){
        super.setBounds(x, y, w, h);
        System.out.println("Setting Bounds");
        mInit();
    }
    
    private void mInit(){
        int keysPerRow = keys.length / rows;
        int curRow = 0;
        int rowKey = 0;
        int keyWidth = getWidth() / (keysPerRow);
        int keyHeight = getHeight() / rows;
        char[] mLetter = {'A'};
        setLayout(null);
        for(int i  = 0; i < keys.length; i++){
            int keyX = keyWidth*rowKey;
            int keyY = keyHeight*curRow;
            keys[i] = new javax.swing.JButton();
            keys[i].setBounds(keyX, keyY, keyWidth, keyHeight);
            keys[i].setText(new String(mLetter));
            keys[i].setFont(new Font("Arial",Font.PLAIN,8) );
            keys[i].addActionListener(this);
            keys[i].setEnabled(true);
            System.out.println("Created Key: " + keys[i].toString());
            add(keys[i]);
            ++mLetter[0];
            ++rowKey;
            if(rowKey == keysPerRow){
                rowKey = 0;
                ++curRow;
            }
            
        }
    }
       
    @Override
    public void actionPerformed(ActionEvent ae) {
        javax.swing.JButton pressedKey = (javax.swing.JButton)ae.getSource();
        char pressedChar = pressedKey.getText().toCharArray()[0];
        if(listener!=null){
            listener.onKeyPressed((char) (pressedChar + 32));
        }
        int pressedButton = pressedChar - 'A';
        keys[pressedButton].setEnabled(false);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
